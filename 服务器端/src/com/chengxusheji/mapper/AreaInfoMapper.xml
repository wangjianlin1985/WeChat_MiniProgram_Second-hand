<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace命名空间，为了对sql语句进行隔离，方便管理，mapper开发dao方式，使用namespace有特殊作用  
mapper代理开发时将namespace指定为mapper接口的全限定名  
 -->
<mapper namespace="com.chengxusheji.mapper.AreaInfoMapper"> 
<!--在mapper.xml文件中配置很多的sql语句，执行每个sql语句时，封装为MappedStatement对象 
mapper.xml以statement为单位管理sql语句  
 -->
	<!-- 添加区域信息记录 -->
	<insert id="addAreaInfo" parameterType="areaInfo">
		insert into t_areaInfo(areaName) values 
		(#{areaName})
	</insert>

	<!-- 按照查询条件分页查询区域信息记录 -->
	<select id="queryAreaInfo" resultMap="areaInfoMap" >
		select t_areaInfo.* from t_areaInfo ${where} limit #{startIndex},#{pageSize}
	</select>
	<resultMap id="areaInfoMap" type="areaInfo">
        <id property="areaId" column="areaId" />
    </resultMap>

    <!-- 按照查询条件查询所有区域信息记录 -->
	<select id="queryAreaInfoList" resultMap="areaInfoMap" >
		select t_areaInfo.* from t_areaInfo ${where}
	</select>

    <!-- 按照查询条件的区域信息记录数 -->
	<select id="queryAreaInfoCount" resultType="int">
		select count(*) from t_areaInfo ${where}
	</select>

	<!-- 根据主键查询某个区域信息记录 -->
	<select id="getAreaInfo" parameterType="int" resultMap="areaInfoMap">
		select * from t_areaInfo where t_areaInfo.areaId = #{areaId}
	</select>

	<!-- 更新区域信息记录 -->
	<update id="updateAreaInfo" parameterType="areaInfo">
		update t_areaInfo set areaName=#{areaName} where areaId = #{areaId}
	</update>

	<!-- 删除区域信息记录 -->
	<delete id="deleteAreaInfo" parameterType="int">
		delete from t_areaInfo where areaId=#{areaId}
	</delete>

</mapper>
